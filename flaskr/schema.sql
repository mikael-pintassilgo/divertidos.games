-- Initialize the database.
-- Drop any existing data and create empty tables.

DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS element;

CREATE TABLE user (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  username TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL
);

CREATE TABLE element (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  author_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  title TEXT NOT NULL,
  body TEXT NOT NULL,
  comment TEXT,
  tags TEXT,
  FOREIGN KEY (author_id) REFERENCES user (id)
);

CREATE TABLE element_link (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  title TEXT NOT NULL,
  comment TEXT,
  element_id INTEGER NOT NULL REFERENCES element (id) ON DELETE CASCADE,
  author_id INTEGER NOT NULL REFERENCES user (id)
);

CREATE TABLE element_tag (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  title TEXT NOT NULL,
  comment TEXT,
  element_id INTEGER NOT NULL REFERENCES element (id) ON DELETE CASCADE,
  author_id INTEGER NOT NULL REFERENCES user (id)
);

CREATE TABLE game (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  author_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  title TEXT NOT NULL,
  body TEXT NOT NULL,
  comment TEXT,
  FOREIGN KEY (author_id) REFERENCES user (id)
);

CREATE TABLE game_link (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  title TEXT NOT NULL,
  comment TEXT,
  game_id INTEGER NOT NULL REFERENCES game (id) ON DELETE CASCADE
);

CREATE TABLE game_tag (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  title TEXT NOT NULL,
  comment TEXT,
  game_id INTEGER NOT NULL REFERENCES game (id) ON DELETE CASCADE
);

CREATE TABLE game_and_element (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  game_id INTEGER REFERENCES game (id) ON DELETE CASCADE,
  element_id INTEGER REFERENCES element (id) ON DELETE RESTRICT
);
